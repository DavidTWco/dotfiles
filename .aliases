# davidtwco .bash_aliases Configuration
#	dotfiles: https://github.com/davidtwco/dotfiles
#	website: https://davidtw.co
# =================================================

# If fasd is installed and in use, add a bunch of
# aliases for it.
if command -v fasd >/dev/null 2>&1; then
    # Any
    alias a='fasd -a'

    # Show/search/select
    alias s='fasd -si'

    # Directory
    alias d='fasd -d'

    # File
    alias f='fasd -f'

    # Interactive directory selection
    alias sd='fasd -sid'

    # Interactive file selection
    alias sf='fasd -sif'

    # cd - same functionality as j in autojump
    alias z='fasd_cd -d'

    # Interactive cd
    alias zz='fasd_cd -d -i'

    # Vim
    alias v='fasd -f -e vim'
fi

# 'rm' will prompt once before
#  - removing more than three files.
#  - removing recursively.
alias rm='rm -I'

# Enable color support of ls and also add handy aliases.
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# More ls aliases.
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Alias 'git' to 'hub' if it is available.
if command -v hub >/dev/null 2>&1; then
    if [[ "${SHELL}" =~ ".*zsh-nix-shell.*" ]]; then
        # When using `zsh-nix-shell`, upon launching a `nix-shell`, the `$SHELL` variable is set
        # to a shim that will make `zsh` the default shell within a impure `nix-shell`. This
        # causes `hub` to complain about a unsupported shell, so silence that error here by lying
        # to `hub` about the `$SHELL`.
        eval "$(SHELL=zsh hub alias -s)"
    else
        eval "$(hub alias -s)"
    fi
fi

if command -v nvim >/dev/null 2>&1; then
    alias vim="nvim"
    alias vimdiff="nvim -d"
fi

# Add aliases for workman configurations.
if command -v workman >/dev/null 2>&1; then
    alias workman-rust="WORKMAN_CONFIG_FILE=.workman_config_rust workman"
    alias workman-rust-analyzer="WORKMAN_CONFIG_FILE=.workman_config_rust_analyzer workman"
    alias workman-rust-compiler-team="WORKMAN_CONFIG_FILE=.workman_config_rust_compiler_team workman"
    alias workman-rust-team="WORKMAN_CONFIG_FILE=.workman_config_rust_team workman"
fi

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

if grep -q Microsoft /proc/version; then
    alias rust-musl-builder='docker run --rm -it -v "${$(readlink -f .)#/mnt}":/home/rust/src ekidd/rust-musl-builder:stable'
else
    alias rust-musl-builder='docker run --rm -it -v "${PWD}":/home/rust/src ekidd/rust-musl-builder:stable'
fi

# Use this alias to make GPG need to unlock the key. `gpg-update-ssh-agent` would also want to
# unlock the key, but the pinentry prompt mangles the terminal with that command.
alias gpg-unlock-key='echo "foo" | gpg -o /dev/null --local-user 9F53F154 -as -'
# Use this alias to make the GPG agent relearn what keys are connected and what keys they have.
alias gpg-relearn-key='gpg-connect-agent "scd serialno" "learn --force" /bye'
# > Set the startup TTY and X-DISPLAY variables to the values of this session. This command is
# > useful to direct future pinentry invocations to another screen. It is only required because
# > there is no way in the ssh-agent protocol to convey this information.
alias gpg-update-ssh-agent='gpg-connect-agent updatestartuptty /bye'
# Use this alias to make sure everything is in working order. Need to unlock twice - if
# `gpg-update-ssh-agent` called with an locked key then it will prompt for it to be unlocked in
# a way that will mangle the terminal, therefore we need to unlock before this.
alias gpg-refresh='gpg-relearn-key && gpg-unlock-key && gpg-update-ssh-agent'

# Fairly self explanatory, prints the current external IP address.
alias what-is-my-ip='dig +short myip.opendns.com @resolver1.opendns.com'

# `<command> | sprunge` will make a quick link to send.
alias sprunge="curl -F 'sprunge=<-' http://sprunge.us"

# vim:foldmethod=marker:foldlevel=0:ft=zsh
